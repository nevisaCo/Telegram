import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

apply plugin: 'com.android.library'

repositories {
    mavenCentral()
    google()
    jcenter()
}

configurations {
    compile.exclude module: 'support-v4'
}

configurations.all {
    exclude group: 'com.google.firebase', module: 'firebase-core'
    exclude group: 'androidx.recyclerview', module: 'recyclerview'
}

dependencies {
    implementation 'androidx.core:core:1.6.0'
    implementation 'androidx.palette:palette:1.0.0'
    implementation 'androidx.exifinterface:exifinterface:1.3.3'
    implementation 'androidx.dynamicanimation:dynamicanimation:1.0.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation "androidx.sharetarget:sharetarget:1.2.0"

    compileOnly 'org.checkerframework:checker-qual:2.5.2'
    compileOnly 'org.checkerframework:checker-compat-qual:2.5.0'
    implementation 'com.google.firebase:firebase-messaging:22.0.0'
    implementation 'com.google.firebase:firebase-config:21.0.1'
    implementation 'com.google.firebase:firebase-datatransport:18.1.0'
    implementation 'com.google.firebase:firebase-appindexing:20.0.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.1'
    implementation 'com.google.android.gms:play-services-auth:19.2.0'
    implementation 'com.google.android.gms:play-services-vision:20.1.3'
    implementation 'com.google.android.gms:play-services-wearable:17.1.0'
    implementation 'com.google.android.gms:play-services-location:18.0.0'
    implementation 'com.google.android.gms:play-services-wallet:18.1.3'
    implementation 'com.googlecode.mp4parser:isoparser:1.0.6'
    implementation 'com.stripe:stripe-android:2.0.2'
    implementation 'com.google.mlkit:language-id:16.1.1'
    implementation 'com.android.billingclient:billing:5.0.0'
    implementation 'com.google.code.gson:gson:2.10'

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'

    //region Customized:
    implementation 'com.google.firebase:firebase-core:21.0.0'
    implementation 'com.google.firebase:firebase-analytics:21.0.0'

    implementation 'com.google.android.gms:play-services-ads:20.6.0'

    implementation 'com.squareup.picasso:picasso:2.71828'

    implementation 'com.google.code.gson:gson:2.8.8'
    implementation 'com.android.volley:volley:1.2.1'

    //flurry remote config
    implementation 'com.flurry.android:analytics:13.1.0@aar'

    //device shake detection
    implementation 'com.squareup:seismic:1.0.2'

    //persian date picker
//    implementation 'com.mohamadamin:persianmaterialdatetimepicker:1.2.1'

    implementation 'com.squareup.picasso:picasso:2.71828'

    implementation 'com.google.android.play:core:1.10.3'

    //for the show app-open google ad
    def lifecycle_version = "2.0.0"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"
    //noinspection LifecycleAnnotationProcessorWithJava8
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    //endregion
}

def isWindows = String.valueOf(DefaultNativePlatform.currentOperatingSystem.toFamilyName() == OperatingSystemFamily.WINDOWS)
android {
    compileSdkVersion 31
    buildToolsVersion '31.0.0'
    ndkVersion "21.4.7075529"
/*
    defaultConfig.applicationId = String.valueOf("\""+ APP_PACKAGE+"\"")
*/
    sourceSets.main.jniLibs.srcDirs = ['./jni/']

    externalNativeBuild {
        cmake {
            path 'jni/CMakeLists.txt'
        }
    }

    lintOptions {
        disable 'MissingTranslation'
        disable 'ExtraTranslation'
        disable 'BlockedPrivateApi'
        checkReleaseBuilds false //Customized:
    }

    dexOptions {
        jumboMode = true
        javaMaxHeapSize "4g" //Customized:
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8

        coreLibraryDesugaringEnabled true
    }

    defaultConfig.versionCode = Integer.parseInt(APP_VERSION_CODE)

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 31
        versionName APP_VERSION_NAME

        vectorDrawables.generatedDensities = ['mdpi', 'hdpi', 'xhdpi', 'xxhdpi']

        multiDexEnabled true

        externalNativeBuild {
            cmake {
                version '3.10.2'
                arguments '-DANDROID_STL=c++_static', '-DANDROID_PLATFORM=android-16', "-j=16"
            }
        }

        //region Customized Properties
        manifestPlaceholders = [
                admobAppId     : ADMOB_APPLICATION_ID,
                admobAppIdDebug: "ca-app-pub-3940256099942544~3347511713",
                mapApiKey      : MAP_API_KEY,
                repositoryId   : REPOSITORY_ID,
                repositoryRsa  : REPOSITORY_RSA
        ]

        buildConfigField "Integer", "VERSION_CODE", APP_VERSION_CODE
        buildConfigField "Integer", "MAX_ACCOUNT_COUNT", MAX_ACCOUNT_COUNT
        buildConfigField "Integer", "PRIMARY_COLOR", PRIMARY_COLOR
        buildConfigField "Integer", "APP_ID", APP_ID
        buildConfigField "String", "APPLICATION_ID", String.valueOf("\""+ APP_PACKAGE+"\"")
        buildConfigField "String", "APP_HASH", APP_HASH
        buildConfigField "String", "OFFICIAL_CHANNELS", OFFICIAL_CHANNELS
        buildConfigField "String", "SUPPORT_GROUP", SUPPORT_GROUP
        buildConfigField "String", "DEFAULT_FONT", DEFAULT_FONT
        buildConfigField "String", "FLURRY_APP_ID", FLURRY_APP_ID
        buildConfigField "String", "PREF_NAME", PREF_NAME
        buildConfigField "String", "DOMAIN_URL", DOMAIN_URL
        buildConfigField "String", "PROXY_URL", DOMAIN_URL
        buildConfigField "String", "TAG", TAG
        //endregion
    }

    buildTypes {
        debug {
            debuggable true
            jniDebuggable true
            minifyEnabled false
            shrinkResources false
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), '../TMessagesProj/proguard-rules.pro'
            ndk.debugSymbolLevel = 'FULL'
            buildConfigField "String", "APP_CENTER_HASH", "\"\""
            buildConfigField "boolean", "DEBUG_VERSION", "true"
            buildConfigField "boolean", "DEBUG_PRIVATE_VERSION", "true"
            buildConfigField "boolean", "BUILD_HOST_IS_WINDOWS", isWindows
        }

        HA_private {
            debuggable false
            jniDebuggable false
            minifyEnabled true
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), '../TMessagesProj/proguard-rules.pro'
            ndk.debugSymbolLevel = 'FULL'
            buildConfigField "String", "APP_CENTER_HASH", "\"" + getProps("APP_CENTER_HASH_PRIVATE") + "\""
            buildConfigField "boolean", "DEBUG_VERSION", "true"
            buildConfigField "boolean", "DEBUG_PRIVATE_VERSION", "true"
            buildConfigField "boolean", "BUILD_HOST_IS_WINDOWS", isWindows
        }

        HA_public {
            debuggable false
            jniDebuggable false
            minifyEnabled true
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), '../TMessagesProj/proguard-rules.pro'
            ndk.debugSymbolLevel = 'FULL'
            buildConfigField "String", "APP_CENTER_HASH", "\"" + getProps("APP_CENTER_HASH_PUBLIC") + "\""
            buildConfigField "boolean", "DEBUG_VERSION", "true"
            buildConfigField "boolean", "DEBUG_PRIVATE_VERSION", "false"
            buildConfigField "boolean", "BUILD_HOST_IS_WINDOWS", isWindows
        }

        standalone {
            debuggable false
            jniDebuggable false
            minifyEnabled true
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), '../TMessagesProj/proguard-rules.pro'
            ndk.debugSymbolLevel = 'FULL'
            buildConfigField "String", "APP_CENTER_HASH", "\"\""
            buildConfigField "boolean", "DEBUG_VERSION", "false"
            buildConfigField "boolean", "DEBUG_PRIVATE_VERSION", "false"
            buildConfigField "boolean", "BUILD_HOST_IS_WINDOWS", isWindows
        }

        release {
            debuggable false
            jniDebuggable false
            minifyEnabled true
            shrinkResources false
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), '../TMessagesProj/proguard-rules.pro'
            ndk.debugSymbolLevel = 'FULL'
            buildConfigField "String", "APP_CENTER_HASH", "\"\""
            buildConfigField "boolean", "DEBUG_VERSION", "false"
            buildConfigField "boolean", "DEBUG_PRIVATE_VERSION", "false"
            buildConfigField "boolean", "BUILD_HOST_IS_WINDOWS", isWindows
        }
    }
}


def getProps(String propName) {
    def propsFile = rootProject.file('local.properties')
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        return props[propName]
    } else {
        return "";
    }
}
apply plugin: 'com.google.gms.google-services'
